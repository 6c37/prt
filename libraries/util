#!/bin/fish
#
# util - Some common misc functions
# onodera, https://github.com/onodera-punpun

## FUNCTIONS

# This function compiles/install ports
#
# This function optionally takes a list of ports as argument
#
# The function depends on the following pre-defined variables:
# script (true/false)
# verbose (true/false)
# method (install/update)
function prtinstall
	# Initialize count values
	set current 0
	set total (count $argv)

	# Use $PWD if no ports have been given
	if test $total -ge 1
		set ports $argv
	else
		set ports $PWD
	end

	for port in $ports
		if test $total -ge 1
			cd $portdir/$port
		else
			set total 1
		end

		set current (math $current + 1)

		if test $method = install
			echo "Installing port $current/$total, $bright$port$foreground."
		else
			echo "Updating port $current/$total, $bright$port$foreground."
		end

		# notify about REAMDE
		if test -f $PWD/README
			echo "$dark-> "$foreground"This port has a README"
		end

		# Execute pre-install
		if test $script = true
			if test -f $PWD/pre-install
				echo "$dark-> "$foreground"Executing pre-install"
				eval $PWD/pre-install
				if test $status -ge 1
					echo "Failed to execute $bright$port$foreground pre-install." >/dev/stderr
					exit 1
				end
			end
		end

		# Download port
		echo "$dark-> "$foreground"Downloading sources"
		if test $verbose = true
			pkgmk -do >/dev/null
		else
			pkgmk -do >/dev/null ^/dev/null
		end
		if test $status -ge 1
			echo "Failed to download $bright$port$foreground." >/dev/stderr
			exit 1
		end

		# Extract port
		echo "$dark-> "$foreground"Extracting sources"
		if test $verbose = true
			pkgmk -eo >/dev/null
		else
			pkgmk -eo >/dev/null ^/dev/null
		end
		if test $status -ge 1
			echo "Failed to extract $bright$port$foreground." >/dev/stderr
			exit 1
		end

		# Building port
		echo "$dark-> "$foreground"Creating package"
		if test $verbose = true
			pkgmk -f >/dev/null
		else
			pkgmk -f >/dev/null ^/dev/null
		end
		if test $status -ge 1
			echo "Failed to build $bright$port$foreground." >/dev/stderr
			exit 1
		end

		# Install/update port
		echo "$dark-> "$foreground"Installing package"
		if test $method = install
			if test $verbose = true
				pkgmk -i >/dev/null
			else
				pkgmk -i >/dev/null ^/dev/null
			end
			if test $status -ge 1
				echo "Failed to install $bright$port$foreground." >/dev/stderr
				exit 1
			end
		else
			# TODO: The -f causes ports to rebuild...
			if test $verbose = true
				pkgmk -u >/dev/null
			else
				pkgmk -u >/dev/null ^/dev/null
			end
			if test $status -ge 1
				echo "Failed to update $bright$port$foreground." >/dev/stderr
				exit 1
			end
		end

		# Execute post-install
		if test $script = true
			if test -f $PWD/post-install
				echo "$dark-> "$foreground"Executing post-install"
				eval $PWD/post-install
				if test $status -ge 1
					echo "Failed to execute $bright$port$foreground post-install." >/dev/stderr
					exit 1
				end
			end
		end
	end
end

# This function checks if the uses has root access and fails if that's not the case
#
# This function takes a string as arugment, for example "install ports"
function prtonlyroot
	if test (id -u) -ge 1
		echo "Only root can $argv." >/dev/stderr
		exit 1
	end
end

# This function outputs the Pkgfile
#
# This function optionally takes a Pkgfile location, for example "core/openssl"
function prtpkgfile
	if test -z $argv
		if test -f $PWD/Pkgfile
			cat $PWD/Pkgfile
		else
			echo 'Pkgfile not found.' >/dev/stderr
			exit 1
		end
	else
		if test -f $portdir/$argv/Pkgfile
			cat $portdir/$argv/Pkgfile
		else
			echo "Pkgfile $bright$argv$foreground not found." >/dev/stderr
			exit 1
		end
	end
end


## EXECUTE

# Load config
source /etc/prt/config

# Initialize colors
set foreground (set_color $foreground)
set bright (set_color $bright)
set dark (set_color $dark)
